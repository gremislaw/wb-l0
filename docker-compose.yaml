version: "3.7"
services:
  postgres:
    image: postgres:alpine3.20
    container_name: order-service-postgres
    restart: on-failure
    environment:
      POSTGRES_DB: "wb_orders"
      POSTGRES_USER: "wb"
      POSTGRES_PASSWORD: "wb"
      PGDATA: "/pgdata"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - ./sql_scripts:/docker-entrypoint-initdb.d
      - ./data:/data

  app:
    build: .
    container_name: order_service
    restart: always
    depends_on:
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      APP_IP: "0.0.0.0"
      APP_PORT: "8080"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "wb_orders"
      POSTGRES_USER: "wb"
      POSTGRES_PASSWORD: "wb"
      KAFKA_BOOTSTRAP_SERVER1: "localhost:9091"
      KAFKA_BOOTSTRAP_SERVER2: "localhost:9092"
      KAFKA_BOOTSTRAP_SERVER3: "localhost:9093"
      KAFKA_TOPIC: "orders"
      KAFKA_CONSUMER_GROUP: "orders-group"
    ports:
      - "8080:8080"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 3
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - net_wb

  kafka1:
    image: confluentinc/cp-server:7.7.1
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
    networks:
      - net_wb

  kafka2:
    image: confluentinc/cp-server:7.7.1
    hostname: kafka2
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
    networks:
      - net_wb

  kafka3:
    image: confluentinc/cp-server:7.7.1
    hostname: kafka3
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29093,PLAINTEXT_HOST://localhost:9093
    networks:
      - net_wb

  redpanda-console:
    image: vectorized/redpanda
    ports:
      - "8081:8080"
    environment:
      - REDPANDA_BROKER=localhost:9092
volumes:
  kafka_data:
  pg_data:

networks:
  net_wb:
    driver: bridge